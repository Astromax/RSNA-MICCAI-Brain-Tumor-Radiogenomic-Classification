# -*- coding: utf-8 -*-
"""create_patient_JSON_file.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1y8tpEM_0PHLc-g38oI9gIUnZGDHU1Hug
"""

from dicom2array import _dicom2array
import glob
import json
import numpy as np
from operator import itemgetter
import pydicom

train_path = '/kaggle/input/rsna-miccai-brain-tumor-radiogenomic-classification'
exclude = ['00109', '00157', '00170', '00186', '00353', '00367', '00414', '00561', '00563', '00564', '00565',
         '00756', '00834', '00839']
modalities = ['FLAIR', 'T1w', 'T1wCE', 'T2w']

def create_json(path, excludes, modes):
    full_data_dict = {}

    patients = glob.glob(f'{train_path}/train/*')
    patient_IDs = sorted([p.split('/')[-1] for p in patients])
    for patient in patient_IDs:
        if patient in excludes:
            continue
        subdict = {}
        for mode in modes:
            imgnames = glob.glob(f'{train_path}/train/{patient}/{mode}/*.dcm')
            if len(imgnames) == 0:
                subdict[mode] = []
                continue
            image_slice_locs = [pydicom.dcmread(im)[('0020', '1041')].value for im in imgnames]
            imgpairs = zip(imgnames, image_slice_locs)
            imgpairs = sorted(imgpairs, key=itemgetter(1))
        
            images = [f[0] for f in imgpairs]
            real_images = [_dicom2array(f) for f in images]
            good_indices = [idx for idx,image in enumerate(real_images) if np.max(image) > 0]
            good_imnames = [im for idx,im in enumerate(images) if idx in good_indices]
            if len(good_imnames) == 0:
                subdict[mode] = []
                continue
        
            final_imnames = [imname.split('/')[-1] for imname in good_imnames]
    
            subdict[mode] = final_imnames
        full_data_dict[patient] = subdict

    with open('patients_ordered_images.json', 'w') as outfile:
        json.dump(full_data_dict, outfile)

    return